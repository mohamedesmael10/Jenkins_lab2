pipeline {
    agent any

    parameters {
        choice(name: 'BRANCH_NAME', choices: ['dev', 'master', 'test'], description: 'Select the GitHub branch to build')
    }
    
    environment {
        DOCKER_CREDS = credentials('mohamedesmael_dockerhub')
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    if (params.BRANCH_NAME == 'test') {
                        git url: 'https://github.com/mohamedesmael10/Jenkins_lab2.git', branch: 'test'
                    } else {
                        git url: 'https://github.com/mohamedesmael10/Jenkins_lab2.git', branch: params.BRANCH_NAME
                    }
                }
            }
        }
        
        stage('Docker Login') {
            when {
                expression { params.BRANCH_NAME == 'test' }
            }
            steps {
                sh '''
                  echo "$DOCKER_CREDS_PSW" | docker login -u "$DOCKER_CREDS_USR" --password-stdin
                '''
            }
        }
        
        stage('Build Image') {
            steps {
                echo "Building Docker image..."
                sh 'docker build -t ubuntu .'
            }
        }
        
        stage('Tag & Push Image') {
            steps {
                script {
                    def tag = ''
                    // Determine the Docker image tag based on branch selection
                    if (params.BRANCH_NAME == 'dev') {
                        tag = 'v4'
                    } else if (params.BRANCH_NAME == 'master') {
                        tag = 'v5'
                    } else if (params.BRANCH_NAME == 'test') {
                        tag = 'v3'
                    }
                    
                    echo "Tagging image as mohamedesmael/jenkins_lab1:${tag}"
                    sh "docker tag ubuntu mohamedesmael/jenkins_lab1:${tag}"
                    echo "Pushing image mohamedesmael/jenkins_lab1:${tag}"
                    sh "docker push mohamedesmael/jenkins_lab1:${tag}"
                }
            }
        }
    }
    
}
